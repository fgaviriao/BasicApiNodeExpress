{
  "openapi": "3.0.0",
  "info": {
    "title": "API Template",
    "description": "Plantilla de API con Node, Express y TypeScript para iniciar proyectos rápidamente.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/"
    }
  ],
  "paths": {
    "/api/login": {
      "post": {
        "tags": [
          "Autenticación"
        ],
        "summary": "Iniciar sesión",
        "description": "Endpoint para que los usuarios inicien sesión y obtengan tokens de acceso y actualización.",
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthLoginResponseDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthLoginResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Credenciales inválidas"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginDto"
              }
            }
          }
        }
      }
    },
    "/api/refresh-token": {
      "post": {
        "tags": [
          "Autenticación"
        ],
        "summary": "Refrescar token",
        "description": "Endpoint para refrescar el token de acceso utilizando un token de actualización.",
        "responses": {
          "200": {
            "description": "Token de acceso refrescado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthRefreshTokenResponseDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthRefreshTokenResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Refresh Token no proporcionado"
          },
          "403": {
            "description": "Token inválido"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRefreshTokenDto"
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Crear usuario",
        "description": "Endpoint para crear un nuevo usuario en el sistema.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuario creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Error al crear el usuario"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Editar usuario",
        "description": "Endpoint para editar la información de un usuario existente.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario editado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuario editado"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Usuario editado"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error al editar el usuario"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserRequest"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Consulta todos los usuarios",
        "description": "Endpoint para obtener una lista de todos los usuarios registrados en el sistema.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "usuarios obtenidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/change_active_state": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Cambiar estado activo del usuario",
        "description": "Endpoint para cambiar el estado activo de un usuario.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estado del usuario cambiado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Estado del usuario cambiado"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Estado del usuario cambiado"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error al cambiar el estado del usuario"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserActiveStateRequest"
              }
            }
          }
        }
      }
    },
    "/api/users/change_locked_state": {
      "put": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Cambiar estado bloqueado del usuario",
        "description": "Endpoint para cambiar el estado bloqueado de un usuario.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Estado del usuario cambiado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Estado del usuario cambiado"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Estado del usuario cambiado"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error al cambiar el estado del usuario"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserLockedStateRequest"
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Consulta usuario por ID",
        "description": "Endpoint para obtener un usuario por su ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del usuario a buscar"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario obtenido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/username/{username}": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Consulta usuario por nombre de usuario",
        "description": "Endpoint para obtener un usuario por su nombre de usuario.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Nombre de usuario del usuario a buscar"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario obtenido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Usuario no encontrado"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/criteria": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Consulta usuarios por criterios",
        "description": "Endpoint para obtener una lista de usuarios que cumplan con los criterios especificados.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuarios obtenidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Error en la consulta"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindUsersByCriteriaRequest"
              }
            }
          }
        }
      }
    },
    "/api/credentials/request_password_reset": {
      "post": {
        "tags": [
          "Credenciales"
        ],
        "summary": "Solicitar restablecimiento de contraseña",
        "description": "Endpoint para solicitar un restablecimiento de contraseña. Se genera un token y se envía al correo electrónico proporcionado.",
        "responses": {
          "200": {
            "description": "Solicitud de restablecimiento de contraseña exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud de restablecimiento de contraseña"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        }
      }
    },
    "/api/credentials/reset_password": {
      "put": {
        "tags": [
          "Credenciales"
        ],
        "summary": "Restablecer contraseña",
        "description": "Endpoint para restablecer la contraseña utilizando un token válido.",
        "responses": {
          "200": {
            "description": "Contraseña actualizada correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePasswordResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error al restablecer la contraseña"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "example": "correo@ejemplo.com"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "isLocked": {
            "type": "boolean",
            "example": true
          }
        },
        "xml": {
          "name": "UserDto"
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "example": 1
            },
            "username": {
              "type": "string",
              "example": "johndoe"
            },
            "email": {
              "type": "string",
              "example": "correo@ejemplo.com"
            },
            "firstName": {
              "type": "string",
              "example": "John"
            },
            "lastName": {
              "type": "string",
              "example": "Doe"
            },
            "isActive": {
              "type": "boolean",
              "example": true
            },
            "isLocked": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "xml": {
          "name": "Users"
        }
      },
      "UserCreateDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "example": "correo@ejemplo.com"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "confirmPassword": {
            "type": "string",
            "example": "password"
          }
        },
        "xml": {
          "name": "UserCreateDto"
        }
      },
      "EditUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "example": "correo@ejemplo.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "isLocked": {
            "type": "boolean",
            "example": true
          }
        },
        "xml": {
          "name": "EditUserRequest"
        }
      },
      "EditUserActiveStateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "xml": {
          "name": "EditUserActiveStateRequest"
        }
      },
      "EditUserLockedStateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "isLocked": {
            "type": "boolean",
            "example": true
          }
        },
        "xml": {
          "name": "EditUserLockedStateRequest"
        }
      },
      "Credentials": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        },
        "xml": {
          "name": "Credentials"
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "correo@ejemplo.com"
          }
        },
        "xml": {
          "name": "ResetPasswordRequest"
        }
      },
      "ResetPasswordResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "correo@ejemplo.com"
          },
          "createAt": {
            "type": "string",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "expireAt": {
            "type": "string",
            "example": "2024-01-01T01:00:00.000Z"
          }
        },
        "xml": {
          "name": "ResetPasswordResponse"
        }
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "correo@ejemplo.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "confirmPassword": {
            "type": "string",
            "example": "password"
          },
          "token": {
            "type": "string",
            "example": "d1f1e1c1-1a1a-1b1b-1c1c-1d1d1e1e1f1f"
          }
        },
        "xml": {
          "name": "UpdatePasswordRequest"
        }
      },
      "UpdatePasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Contraseña actualizada correctamente"
          }
        },
        "xml": {
          "name": "UpdatePasswordResponse"
        }
      },
      "AuthLoginDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        },
        "xml": {
          "name": "AuthLoginDto"
        }
      },
      "AuthLoginResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "xml": {
          "name": "AuthLoginResponseDto"
        }
      },
      "AuthRefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "xml": {
          "name": "AuthRefreshTokenDto"
        }
      },
      "AuthRefreshTokenResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "xml": {
          "name": "AuthRefreshTokenResponseDto"
        }
      }
    }
  }
}